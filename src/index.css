@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');

:root {
  --colorBg: hsl(0, 0%, 10%);
  --colorPrimary: #85807a;


  --lcdShadow: hsl(210, 100%, 5%, 0.7) 0.08em 0.08em 0.05em;
  --lcdTextColor: #132613;
  --gameBoyBlue: #2a2d93;
  --lcdBG: #5c834a;

  --paddingSm: 0.3em;
  --paddingMd: calc(var(--paddingSm) * 2);
  --paddingLg: calc(var(--paddingMd) * 2);
}


* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  border: none;
  font-family: 'Press Start 2P', cursive;
}

body,
div,
button,
input,
form,
nav {
  display: flex;
}

button{
  justify-content: center;
  background-color: #532238;
}

body {
  flex-direction: column;
  margin: 0;
  padding: 0;
  min-width: 100vw;
  min-height: 100vh;
  background-color: var(--colorBg);
  justify-content: center;
  align-items: center;
}

#root {
  flex-direction: column;
  align-items: center;
  min-width: 100%;
  max-width: 100%;
  min-height: 100vh;
  /* max-height: 100vh; */
  padding-top: 1em;
}

.layout{
  flex-direction: column;
  align-items: center;
  max-width: calc(100% - 2em);
}

.flexCol {
  flex-direction: column;
}

.flexRow {
  flex-direction: row;
}
.justifyContentSpaceEvenly{
  justify-content: space-evenly;
}
.justifyContentSpaceBetween{
  justify-content: space-between;
}
.justifyContentSpaceAround{
  justify-content: space-around;
}

.justifyContentCenter{
  justify-content: center;
}

/* Padding */

.paddingX {
  padding-left: var(--paddingSm);
  padding-right: var(--paddingSm);
}

.paddingY {
  padding-top: var(--paddingSm);
  padding-bottom: var(--paddingSm);
}
.padding {
  padding: var(--paddingSm);
}
.paddingMdX {
  padding-left: var(--paddingMd);
  padding-right: var(--paddingMd);
}

.paddingMdY {
  padding-top: var(--paddingMd);
  padding-bottom: var(--paddingMd);
}
.paddingMd {
  padding: var(--paddingMd);
}
.paddingLgX {
  padding-left: var(--paddingLg);
  padding-right: var(--paddingLg);
}

.paddingLgY {
  padding-top: var(--paddingLg);
  padding-bottom: var(--paddingLg);
}
.paddingLg {
  padding: var(--paddingLg);
}

/* Margin */

.marginX {
  margin-left: var(--paddingSm);
  margin-right: var(--paddingSm);
}

.marginY {
  margin-top: var(--paddingSm);
  margin-bottom: var(--paddingSm);
}

.margin {
  margin: var(--paddingMd);
}
.marginMdX {
  margin-left: var(--paddingMd);
  margin-right: var(--paddingMd);
}

.marginMdY {
  margin-top: var(--paddingMd);
  margin-bottom: var(--paddingMd);
}

.marginMd {
  margin: var(--paddingLg);
}
.marginLgX {
  margin-left: var(--paddingLg);
  margin-right: var(--paddingLg);
}

.marginLgY {
  margin-top: var(--paddingLg);
  margin-bottom: var(--paddingLg);
}

.marginLg {
  margin: var(--paddingLg);
}

.toy {
  flex-direction: column;
  background-color: var(--colorPrimary);
  max-width: 100vh;
  max-height: 100vh;
  border-radius: var(--paddingLg);
  box-shadow: inset rgb(255,255,255, 0.1) 0.3em 0.3em 0.6em;
}
.toyInnerShine{
  padding: 4em;
  box-shadow: inset rgb(0, 0, 0, 0.4) -0.3em -0.3em  0.6em ;
  border-radius: var(--paddingLg);
  height: 100%;
}

.petHeader{
  display: flex;
  align-items: center;
  justify-content: space-between;
  font-size: 1.25em;
  color: var(--gameBoyBlue);
  margin-bottom: 1em;
}
.Chimtembo{
  color: rgb( 210, 0, 0, 0.7);
  border: 0.3em solid;
  border-radius: 35%;
  padding: 0.5em; text-transform: uppercase;
}
.petElement {
  flex-direction: column;
  min-width: 100%;
  padding: 2em;
  padding-bottom: 0.5em;
  border-radius: 3em;
  /* LCD Screen Color */
  background-color: var(--lcdBG);
  box-shadow: inset rgb(0, 0, 0, 0.2) 15px 15px 5px;
  /* LCD Text Color */
  color: var(--lcdTextColor);
  text-shadow: var(--lcdShadow);
}

.nameButton{
  background-color: black;
  color: var(--lcdBG);
}

.petButton {
  content: '';
  padding: 1em;
  justify-content: center;
  width: 3em;
  height: 3em;
  border-radius: var(--paddingLg);
  box-shadow: var(--paddingSm) var(--paddingSm) var(--paddingMd) rgb(0, 0, 0, 0.3);
}

.petButtonContainer {
  flex-direction: row;
  justify-content: space-evenly;
  margin-top: 2em;
  min-width: 100%;
}

.achievementComponent {
  flex-direction: column;
  background-color: rgb(255, 255, 255, 0.5);
  border-radius: 1em;
  padding: 1em;
  min-width: 100%;
  animation: forwards;
  animation: ease-in;
  animation-play-state: running;
  animation-delay: 2s;
  margin-top: var(--paddingMd);
}

.achievementWrapper {
  display: flex;
  margin-top: var(--paddingMd);
  margin-bottom: var(--paddingMd);
}

.achievement {
  flex-direction: row;
  align-items: center;
  background-color: rgb(77, 77, 77);
  color: white;
  padding: 0em;
  border-radius: var(--paddingMd);
  width: 100%;
}

.achievement>div {
  padding: 0.5em;
}

.achievement:hover {
  filter: brightness(1.15);
  cursor: pointer;
}

.achievementsList {
  flex-direction: column;
}

.achievementMessage {
  font-family: sans-serif;
}

.achievement:hover .achievementMessage {
  filter: opacity(1);
}

.achievementHeader {
  color: #ffbbcc
}


.petImg {
  min-width: 50%;
  max-width: 75%;
  border-radius: 2em;
}

.lcdShadow{
  /* filter: drop-shadow(var(--lcdShadow)); */
  fill: var(--lcdTextColor);
}

.petWingRect{
  animation-direction: alternate;
  animation-iteration-count: infinite;
  animation-name: petFlap;
  /* animation-delay: 2s; */
  animation-duration: 0.15s;
  animation-fill-mode: both;
}
.petEyelidRect{
  animation-direction: alternate;
  animation-iteration-count: infinite;
  animation-name: petBlink;
  animation-delay: 2s;
  animation-duration: 1.5s;
  animation-fill-mode: both;
  /* animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1); */
  /* transform: skew(0deg, 10deg); */
}
.petBellyRect{
  animation-direction: alternate;
  animation-iteration-count: infinite;
  animation-name: petBreathe;
  /* animation-delay: 2s; */
  animation-duration: 0.8s;
  animation-fill-mode: both;
  
}


.livePet {
  animation-direction: alternate;
  animation-iteration-count: infinite;
  animation-name: petShuffle;
  /* animation-delay: 2s; */
  animation-duration: 1s;
  /* animation-fill-mode: both; */
  /* animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1); */
  transform: skew(0deg, 0deg);
}



@keyframes petShuffle {
  0% {
    /* transform: rotate(0deg); */
    transform: scaleY(1);
  }
  89% {
  }
  90% {
  }
  100% {
    /* transform: rotate(0.5deg); */
    transform: scaleY(1.02);
  }
}

@keyframes petBlink {
  90% {
    transform: scale(1, 1);
  }
  100% {
    transform: scale(1, 1.1);
  }
}
@keyframes petBreathe {
  0% {
    transform: scale(1, 1);
  }
  100% {
    x: 169;
  }
}
@keyframes petFlap {
  0% {
    x: 32;
    transform: scaleX(1) rotate(0deg);
  }
  
  100% {
    x: -12;
    transform: scaleX(1.09) rotate(-5deg);
  }
}

.progressBarWrapper {
  align-items: center;
  padding: 0em;
  border: 0.1em black solid;
}

.ProgressBarWrapper {
  align-items: center;
  padding: 0.5em;
  /* border: 0.001em black solid; */
}


.layout{
  flex-direction: column;
}