@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');

:root {
  --colorBg: rgb(37, 37, 192);
  --colorPrimary: rgb(59, 140, 211);
  --paddingSm: 0.3em;
  --paddingMd: calc(var(--paddingSm) * 2);
  --paddingLg: calc(var(--paddingMd) * 2);
}


* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  border: none;
  font-family: 'Press Start 2P', cursive;
}

body,
div,
button,
input,
form,
nav {
  display: flex;
}

button{
  justify-content: center;
}

button:hover {
  filter: brightness(0.8);
}

button:active {
  filter: invert();
}

body {
  flex-direction: column;
  margin: 0;
  padding: 0;
  min-width: 100vw;
  min-height: 100vh;
  background-color: var(--colorBg);
  justify-content: center;
  align-items: center;
}

#root {
  flex-direction: column;
  min-width: 30em;
  max-width: 40em;
}

.flexCol {
  flex-direction: column;
}

.flexRow {
  flex-direction: row;
}
.justifyContentSpaceEvenly{
  justify-content: space-evenly;
}
.justifyContentSpaceBetween{
  justify-content: space-between;
}
.justifyContentSpaceAround{
  justify-content: space-around;
}

.padding {
  padding: var(--paddingMd);
}

.paddingX {
  padding-left: var(--paddingMd);
  padding-right: var(--paddingMd);
}

.paddingY {
  padding-top: var(--paddingMd);
  padding-bottom: var(--paddingMd);
}
.margin {
  margin: var(--paddingSm);
}

.marginX {
  margin-left: var(--paddingSm);
  margin-right: var(--paddingSm);
}

.marginY {
  margin-top: var(--paddingSm);
  margin-bottom: var(--paddingSm);
}

.toy {
  flex-direction: column;
  background-color: rgb(59, 140, 211);
  padding: 8em;
  /* max-width: ; */
  border-top-left-radius: 50% 60%;
  border-top-right-radius: 50% 60%;
  border-bottom-right-radius: 50% 60%;
  border-bottom-left-radius: 50% 60%;
  box-shadow: inset rgb(0, 0, 0, 0.5) -10px -10px 15px;
}

.petElement {
  flex-direction: column;
  min-width: 100%;
  padding: 2em;
  border-radius: 3em;
  /* LCD Screen Color */
  background-color: rgb(72, 95, 87);
  box-shadow: inset rgb(0, 0, 0, 0.2) 15px 15px 5px;
  /* LCD Text Color */
  color: #111;
}

.petButton {
  content: '';
  padding: 1em;
  justify-content: center;
  width: 3em;
  height: 3em;
  border-radius: 50% 25%;
  box-shadow: 5px 15px 15px rgb(0, 0, 0, 0.5);
}

.petButtonContainer {
  flex-direction: row;
  justify-content: space-evenly;
  margin-top: 2em;
  min-width: 100%;
}

.achievementComponent {
  flex-direction: column;
  background-color: rgb(255, 255, 255, 0.5);
  border-radius: 1em;
  padding: 1em;
  animation: forwards;
  animation: ease-in;
  animation-play-state: running;
  animation-delay: 2s;
}

.achievementWrapper {
  display: flex;
  margin-bottom: 0.5em;
}

.achievement {
  flex-direction: row;
  align-items: center;
  background-color: rgb(77, 77, 77);
  color: white;
  padding: 0em;
  border-radius: 0.5em;
  width: 100%;
}

.achievement>div {
  padding: 0.5em;
}

.achievement:hover {
  filter: brightness(1.2);
  cursor: pointer;
}

.achievementsList {
  flex-direction: column;
}

.achievementMessage {
  font-family: sans-serif;
}

.achievement:hover .achievementMessage {
  filter: opacity(1);
}

.achievementHeader {
  color: #ffbbcc
}


.petImg {
  border-radius: 2em;
}

.livePet {
  animation-direction: alternate;
  animation-iteration-count: infinite;
  animation-name: petShuffle;
  animation-delay: 2s;
  animation-duration: 0.4s;
  animation-fill-mode: both;
  /* animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1); */
  transform: skew(0deg, 10deg);
}

@keyframes petShuffle {
  0% {
    transform: skew(0deg, 2deg);
  }

  20% {
    transform: skew(0deg, 0deg);
  }

  80% {
    transform: skew(0deg, 3deg);
  }

  100% {
    transform: skew(0deg, -5deg);
  }
}

.progressBarWrapper {
  align-items: center;
  padding: 0em;
  border: 0.1em black solid;
}

.ProgressBarWrapper {
  align-items: center;
  padding: 0.5em;
  /* border: 0.001em black solid; */
}